class GfG
{
    Node reverse(Node head) {
        if(head == null || head.next == null) return head;
        Node last = reverse(head.next);
        head.next.next = head;
        head.next = null;
        return last;
    }
    
    Node merge(Node l1, Node l2){
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        Node curr;
        if(l1.data < l2.data){
            curr = l1;
            curr.next = merge(l1.next, l2);
        }
        else{
            curr = l2;
            curr.next = merge(l1, l2.next);
        }
        return curr;
    }
    
    Node mergeResult(Node node1, Node node2)
    {
        Node mg = merge(node1, node2);
        return reverse(mg);
    }
}
